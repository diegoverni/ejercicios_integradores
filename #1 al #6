"""
# 1 - Maximo comun divisor

def maximo_comun_divisor(a, b):   # 2 y 4
    temporal = 0 
    while b != 0:     #mientras b no sea 0, en este caso le paso 4 por ende no es 0 / en la segunda pasada b = 2 es distinto de 0 / t6ercera pasada b = 0, sale del while
        temporal = b  #asigna b a la variable -> temporal = 4 / temporal =2
        b = a % b     #b será igual ahora al resto (%) entre a y b -> b = 2 % 4 = 2 (es el resto 2 dividio 4 es 0 resto 2) / b = 4 % 2 = 0
        a = temporal  # asignan la variable a a -> a = 4 y b = 2 / a = temporal = 2 y b = 0 (resto de dividir 4 / 2)
    return a          # devuelve a -> a = 2


a = int(input("Introduce el primer numero: "))
b = int(input("Introduce el segundo numero: "))
resultado = maximo_comun_divisor(a, b)
print(f"El Máximo común divisor de {a} y {b} es {resultado}.")


#2 - Mínimo comun múltimo

def minimo_comun_multiplo (a, b):  
  multiplos_a = []  
  multiplos_b = []  
  for t in range(1, a * b + 1):  
    multiplos_a.append (t * a)  
    multiplos_b.append (t * b)
  
    if t * a in multiplos_b:  
      return t * a  
    elif t * b in multiplos_a:  
      return t * b  
  return a * b
  
a = int(input("Introduce el primer numero: "))
b = int(input("Introduce el segundo numero: "))
print ("El mínimo común múltiplo de {} y {} es {}.".format(a, b, minimo_comun_multiplo(a, b)))  



# 3 - Escribir un programa que reciba una cadena de caracteres  y devuelva un diccionario con cada palabra que contiene y la cantidad de veces que aparece (frecuencia).

def cadena_de_caracteres (cadena):
  lista = cadena.split()
  frecuencia = {}
  for i in lista:
    if i in frecuencia:
      frecuencia [i] += 1
    else:
      frecuencia [i] = 1
  return frecuencia


entrada = input("Ingrese su cadena de caracteres: ")

print(cadena_de_caracteres (entrada))


# 4 - Ejercicio #3 + Escribir otra función que reciba el diccionario generado con la función anterior y devuelva una tupla con la palabra más repetida y su frecuencia. 

def cadena_de_caracteres (cadena):
  lista_1 = cadena.split()
  dict_1 = {}
  for i in lista_1:
    if i in dict_1:
      dict_1[i] += 1
    else:
      dict_1[i] = 1
  return dict_1

def contador_palabras (frecuencia):
  palabra_frecuente= ""
  cantidad = 0
  for keys, values in frecuencia.items():
    if values > cantidad:
      cantidad = values
      palabra_frecuente = keys
  return palabra_frecuente, cantidad
entrada = input("Ingrese su cadena de caracteres: ")

print(cadena_de_caracteres (entrada))
print(contador_palabras (cadena_de_caracteres (entrada)))



# 5- Sabiendo que ValueError es la excepción que se lanza cuando no podemos convertir una cadena de texto en su valor numérico

while True:
    try:
        x = int(input("Ingrese un número entero: "))
        print (f"El numero que usted ingreso es entero y es el {x}, gracias!!!")
        break
    except ValueError:
        print("Parece que tu ingreso no es un entero, vuelve a intentarlo...")



#5 bis
  
def get_int():
    try:
        return int(input("Ingrese un número entero: "))
    
    except ValueError:
        print("Parece que tu ingreso no es un entero, vuelve a intentarlo...")
        return get_int()

get_int()
print ("El numero que usted ingreso es entero, gracias!!!")

"""

#6 - Crear una clase llamada Persona.

class Persona:
    def __init__(self):
        self.nombre=input("Ingrese el nombre: ")
        self.edad=int(input("Ingrese la edad: "))
        self.dni=input("Ingrese el DNI: ")
  
    def mostrar(self):
        print("Nombre: ",self.nombre)
        print("Edad: ",self.edad)
        print("DNI: ",self.dni)
 
    def es_mayor_edad(self):
        if self.edad >= 18:
            print("Es mayor de edad.")
        else:
            print("No es mayor de edad.")
 
persona1=Persona()
persona1.mostrar()
persona1.es_mayor_edad()
